/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        newlayer_tap: newlayer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NEWLAYER_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <290>;
        };

        cadet_hold_tap: cadet_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "CADET_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <145>;
            quick-tap-ms = <290>;
        };

        caps_hard_press: caps_hard_press {
            compatible = "zmk,behavior-sticky-key";
            label = "CAPS_HARD_PRESS";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <200>;
            quick-release;
            ignore-modifiers;
        };

        hold_keypress: hold_keypress {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_KEYPRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB         &hold_keypress LEFT_BRACE Q  &kp W  &kp F         &kp P      &hold_keypress LEFT_PARENTHESIS B    &hold_keypress RIGHT_PARENTHESIS J  &kp L                      &kp U                      &kp Y                        &hold_keypress RIGHT_BRACE SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp A                        &kp R  &kp S         &kp T      &kp G                                &kp M                               &kp N                      &kp E                      &kp I                        &kp O                                 &cadet_hold_tap RIGHT_SHIFT ENTER
&kp LCTRL       &kp Z                        &kp X  &kp C         &kp D      &kp V                                &kp K                               &kp H                      &hold_keypress PLUS COMMA  &hold_keypress EQUAL PERIOD  &kp FSLH                              &kp MINUS
                                                    &kp LEFT_ALT  &kp SPACE  &kp LEFT_GUI                         &kp DELETE                          &newlayer_tap 1 BACKSPACE  &newlayer_tap 2 ESCAPE
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "SymNav";
            bindings = <
&kp GRAVE  &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3     &kp NUMBER_4           &kp N5       &kp NUMBER_6  &kp N7    &kp N8    &kp N9  &kp N0     &kp PERCENT
&trans     &kp LESS_THAN     &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp LEFT_PARENTHESIS   &kp EQUAL    &kp AT        &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp ASTERISK
&trans     &kp GREATER_THAN  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp PLUS     &kp HASH      &kp EXCL  &trans    &trans  &kp AMPS   &kp BACKSLASH
                                                &trans           &trans                 &trans       &trans        &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &kp F1                &kp F2                &kp F3        &kp F4        &kp F5              &kp F6      &kp F7             &kp F8           &kp F9                     &kp F10     &kp F11
&trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREV    &kp C_NEXT    &kp C_PLAY_PAUSE    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &caps_hard_press CAPSLOCK  &caps_word  &kp F12
&trans      &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &trans      &kp HOME           &kp PG_DN        &kp PG_UP                  &kp END     &kp C_SLEEP
                                                        &trans        &trans        &trans              &trans      &trans             &trans
            >;

            label = "Func";
        };
    };
};
